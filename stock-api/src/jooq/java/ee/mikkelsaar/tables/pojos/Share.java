/*
 * This file is generated by jOOQ.
 */
package ee.mikkelsaar.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Share implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long       id;
    private Long       day;
    private String     ticker;
    private String     name;
    private String     isin;
    private String     currency;
    private String     marketplace;
    private String     list;
    private BigDecimal averagePrice;
    private BigDecimal openPrice;
    private BigDecimal highPrice;
    private BigDecimal lowPrice;
    private BigDecimal lastClosePrice;
    private BigDecimal lastPrice;
    private BigDecimal priceChangePercentage;
    private BigDecimal bestBid;
    private BigDecimal bestAsk;
    private Integer    trades;
    private Long       volume;
    private BigDecimal turnover;
    private String     industry;
    private String     supersector;

    public Share() {}

    public Share(Share value) {
        this.id = value.id;
        this.day = value.day;
        this.ticker = value.ticker;
        this.name = value.name;
        this.isin = value.isin;
        this.currency = value.currency;
        this.marketplace = value.marketplace;
        this.list = value.list;
        this.averagePrice = value.averagePrice;
        this.openPrice = value.openPrice;
        this.highPrice = value.highPrice;
        this.lowPrice = value.lowPrice;
        this.lastClosePrice = value.lastClosePrice;
        this.lastPrice = value.lastPrice;
        this.priceChangePercentage = value.priceChangePercentage;
        this.bestBid = value.bestBid;
        this.bestAsk = value.bestAsk;
        this.trades = value.trades;
        this.volume = value.volume;
        this.turnover = value.turnover;
        this.industry = value.industry;
        this.supersector = value.supersector;
    }

    public Share(
        Long       id,
        Long       day,
        String     ticker,
        String     name,
        String     isin,
        String     currency,
        String     marketplace,
        String     list,
        BigDecimal averagePrice,
        BigDecimal openPrice,
        BigDecimal highPrice,
        BigDecimal lowPrice,
        BigDecimal lastClosePrice,
        BigDecimal lastPrice,
        BigDecimal priceChangePercentage,
        BigDecimal bestBid,
        BigDecimal bestAsk,
        Integer    trades,
        Long       volume,
        BigDecimal turnover,
        String     industry,
        String     supersector
    ) {
        this.id = id;
        this.day = day;
        this.ticker = ticker;
        this.name = name;
        this.isin = isin;
        this.currency = currency;
        this.marketplace = marketplace;
        this.list = list;
        this.averagePrice = averagePrice;
        this.openPrice = openPrice;
        this.highPrice = highPrice;
        this.lowPrice = lowPrice;
        this.lastClosePrice = lastClosePrice;
        this.lastPrice = lastPrice;
        this.priceChangePercentage = priceChangePercentage;
        this.bestBid = bestBid;
        this.bestAsk = bestAsk;
        this.trades = trades;
        this.volume = volume;
        this.turnover = turnover;
        this.industry = industry;
        this.supersector = supersector;
    }

    /**
     * Getter for <code>public.share.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.share.id</code>.
     */
    public Share setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.share.day</code>.
     */
    public Long getDay() {
        return this.day;
    }

    /**
     * Setter for <code>public.share.day</code>.
     */
    public Share setDay(Long day) {
        this.day = day;
        return this;
    }

    /**
     * Getter for <code>public.share.ticker</code>.
     */
    public String getTicker() {
        return this.ticker;
    }

    /**
     * Setter for <code>public.share.ticker</code>.
     */
    public Share setTicker(String ticker) {
        this.ticker = ticker;
        return this;
    }

    /**
     * Getter for <code>public.share.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.share.name</code>.
     */
    public Share setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>public.share.isin</code>.
     */
    public String getIsin() {
        return this.isin;
    }

    /**
     * Setter for <code>public.share.isin</code>.
     */
    public Share setIsin(String isin) {
        this.isin = isin;
        return this;
    }

    /**
     * Getter for <code>public.share.currency</code>.
     */
    public String getCurrency() {
        return this.currency;
    }

    /**
     * Setter for <code>public.share.currency</code>.
     */
    public Share setCurrency(String currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Getter for <code>public.share.marketplace</code>.
     */
    public String getMarketplace() {
        return this.marketplace;
    }

    /**
     * Setter for <code>public.share.marketplace</code>.
     */
    public Share setMarketplace(String marketplace) {
        this.marketplace = marketplace;
        return this;
    }

    /**
     * Getter for <code>public.share.list</code>.
     */
    public String getList() {
        return this.list;
    }

    /**
     * Setter for <code>public.share.list</code>.
     */
    public Share setList(String list) {
        this.list = list;
        return this;
    }

    /**
     * Getter for <code>public.share.average_price</code>.
     */
    public BigDecimal getAveragePrice() {
        return this.averagePrice;
    }

    /**
     * Setter for <code>public.share.average_price</code>.
     */
    public Share setAveragePrice(BigDecimal averagePrice) {
        this.averagePrice = averagePrice;
        return this;
    }

    /**
     * Getter for <code>public.share.open_price</code>.
     */
    public BigDecimal getOpenPrice() {
        return this.openPrice;
    }

    /**
     * Setter for <code>public.share.open_price</code>.
     */
    public Share setOpenPrice(BigDecimal openPrice) {
        this.openPrice = openPrice;
        return this;
    }

    /**
     * Getter for <code>public.share.high_price</code>.
     */
    public BigDecimal getHighPrice() {
        return this.highPrice;
    }

    /**
     * Setter for <code>public.share.high_price</code>.
     */
    public Share setHighPrice(BigDecimal highPrice) {
        this.highPrice = highPrice;
        return this;
    }

    /**
     * Getter for <code>public.share.low_price</code>.
     */
    public BigDecimal getLowPrice() {
        return this.lowPrice;
    }

    /**
     * Setter for <code>public.share.low_price</code>.
     */
    public Share setLowPrice(BigDecimal lowPrice) {
        this.lowPrice = lowPrice;
        return this;
    }

    /**
     * Getter for <code>public.share.last_close_price</code>.
     */
    public BigDecimal getLastClosePrice() {
        return this.lastClosePrice;
    }

    /**
     * Setter for <code>public.share.last_close_price</code>.
     */
    public Share setLastClosePrice(BigDecimal lastClosePrice) {
        this.lastClosePrice = lastClosePrice;
        return this;
    }

    /**
     * Getter for <code>public.share.last_price</code>.
     */
    public BigDecimal getLastPrice() {
        return this.lastPrice;
    }

    /**
     * Setter for <code>public.share.last_price</code>.
     */
    public Share setLastPrice(BigDecimal lastPrice) {
        this.lastPrice = lastPrice;
        return this;
    }

    /**
     * Getter for <code>public.share.price_change_percentage</code>.
     */
    public BigDecimal getPriceChangePercentage() {
        return this.priceChangePercentage;
    }

    /**
     * Setter for <code>public.share.price_change_percentage</code>.
     */
    public Share setPriceChangePercentage(BigDecimal priceChangePercentage) {
        this.priceChangePercentage = priceChangePercentage;
        return this;
    }

    /**
     * Getter for <code>public.share.best_bid</code>.
     */
    public BigDecimal getBestBid() {
        return this.bestBid;
    }

    /**
     * Setter for <code>public.share.best_bid</code>.
     */
    public Share setBestBid(BigDecimal bestBid) {
        this.bestBid = bestBid;
        return this;
    }

    /**
     * Getter for <code>public.share.best_ask</code>.
     */
    public BigDecimal getBestAsk() {
        return this.bestAsk;
    }

    /**
     * Setter for <code>public.share.best_ask</code>.
     */
    public Share setBestAsk(BigDecimal bestAsk) {
        this.bestAsk = bestAsk;
        return this;
    }

    /**
     * Getter for <code>public.share.trades</code>.
     */
    public Integer getTrades() {
        return this.trades;
    }

    /**
     * Setter for <code>public.share.trades</code>.
     */
    public Share setTrades(Integer trades) {
        this.trades = trades;
        return this;
    }

    /**
     * Getter for <code>public.share.volume</code>.
     */
    public Long getVolume() {
        return this.volume;
    }

    /**
     * Setter for <code>public.share.volume</code>.
     */
    public Share setVolume(Long volume) {
        this.volume = volume;
        return this;
    }

    /**
     * Getter for <code>public.share.turnover</code>.
     */
    public BigDecimal getTurnover() {
        return this.turnover;
    }

    /**
     * Setter for <code>public.share.turnover</code>.
     */
    public Share setTurnover(BigDecimal turnover) {
        this.turnover = turnover;
        return this;
    }

    /**
     * Getter for <code>public.share.industry</code>.
     */
    public String getIndustry() {
        return this.industry;
    }

    /**
     * Setter for <code>public.share.industry</code>.
     */
    public Share setIndustry(String industry) {
        this.industry = industry;
        return this;
    }

    /**
     * Getter for <code>public.share.supersector</code>.
     */
    public String getSupersector() {
        return this.supersector;
    }

    /**
     * Setter for <code>public.share.supersector</code>.
     */
    public Share setSupersector(String supersector) {
        this.supersector = supersector;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Share other = (Share) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (day == null) {
            if (other.day != null)
                return false;
        }
        else if (!day.equals(other.day))
            return false;
        if (ticker == null) {
            if (other.ticker != null)
                return false;
        }
        else if (!ticker.equals(other.ticker))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (isin == null) {
            if (other.isin != null)
                return false;
        }
        else if (!isin.equals(other.isin))
            return false;
        if (currency == null) {
            if (other.currency != null)
                return false;
        }
        else if (!currency.equals(other.currency))
            return false;
        if (marketplace == null) {
            if (other.marketplace != null)
                return false;
        }
        else if (!marketplace.equals(other.marketplace))
            return false;
        if (list == null) {
            if (other.list != null)
                return false;
        }
        else if (!list.equals(other.list))
            return false;
        if (averagePrice == null) {
            if (other.averagePrice != null)
                return false;
        }
        else if (!averagePrice.equals(other.averagePrice))
            return false;
        if (openPrice == null) {
            if (other.openPrice != null)
                return false;
        }
        else if (!openPrice.equals(other.openPrice))
            return false;
        if (highPrice == null) {
            if (other.highPrice != null)
                return false;
        }
        else if (!highPrice.equals(other.highPrice))
            return false;
        if (lowPrice == null) {
            if (other.lowPrice != null)
                return false;
        }
        else if (!lowPrice.equals(other.lowPrice))
            return false;
        if (lastClosePrice == null) {
            if (other.lastClosePrice != null)
                return false;
        }
        else if (!lastClosePrice.equals(other.lastClosePrice))
            return false;
        if (lastPrice == null) {
            if (other.lastPrice != null)
                return false;
        }
        else if (!lastPrice.equals(other.lastPrice))
            return false;
        if (priceChangePercentage == null) {
            if (other.priceChangePercentage != null)
                return false;
        }
        else if (!priceChangePercentage.equals(other.priceChangePercentage))
            return false;
        if (bestBid == null) {
            if (other.bestBid != null)
                return false;
        }
        else if (!bestBid.equals(other.bestBid))
            return false;
        if (bestAsk == null) {
            if (other.bestAsk != null)
                return false;
        }
        else if (!bestAsk.equals(other.bestAsk))
            return false;
        if (trades == null) {
            if (other.trades != null)
                return false;
        }
        else if (!trades.equals(other.trades))
            return false;
        if (volume == null) {
            if (other.volume != null)
                return false;
        }
        else if (!volume.equals(other.volume))
            return false;
        if (turnover == null) {
            if (other.turnover != null)
                return false;
        }
        else if (!turnover.equals(other.turnover))
            return false;
        if (industry == null) {
            if (other.industry != null)
                return false;
        }
        else if (!industry.equals(other.industry))
            return false;
        if (supersector == null) {
            if (other.supersector != null)
                return false;
        }
        else if (!supersector.equals(other.supersector))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.day == null) ? 0 : this.day.hashCode());
        result = prime * result + ((this.ticker == null) ? 0 : this.ticker.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.isin == null) ? 0 : this.isin.hashCode());
        result = prime * result + ((this.currency == null) ? 0 : this.currency.hashCode());
        result = prime * result + ((this.marketplace == null) ? 0 : this.marketplace.hashCode());
        result = prime * result + ((this.list == null) ? 0 : this.list.hashCode());
        result = prime * result + ((this.averagePrice == null) ? 0 : this.averagePrice.hashCode());
        result = prime * result + ((this.openPrice == null) ? 0 : this.openPrice.hashCode());
        result = prime * result + ((this.highPrice == null) ? 0 : this.highPrice.hashCode());
        result = prime * result + ((this.lowPrice == null) ? 0 : this.lowPrice.hashCode());
        result = prime * result + ((this.lastClosePrice == null) ? 0 : this.lastClosePrice.hashCode());
        result = prime * result + ((this.lastPrice == null) ? 0 : this.lastPrice.hashCode());
        result = prime * result + ((this.priceChangePercentage == null) ? 0 : this.priceChangePercentage.hashCode());
        result = prime * result + ((this.bestBid == null) ? 0 : this.bestBid.hashCode());
        result = prime * result + ((this.bestAsk == null) ? 0 : this.bestAsk.hashCode());
        result = prime * result + ((this.trades == null) ? 0 : this.trades.hashCode());
        result = prime * result + ((this.volume == null) ? 0 : this.volume.hashCode());
        result = prime * result + ((this.turnover == null) ? 0 : this.turnover.hashCode());
        result = prime * result + ((this.industry == null) ? 0 : this.industry.hashCode());
        result = prime * result + ((this.supersector == null) ? 0 : this.supersector.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Share (");

        sb.append(id);
        sb.append(", ").append(day);
        sb.append(", ").append(ticker);
        sb.append(", ").append(name);
        sb.append(", ").append(isin);
        sb.append(", ").append(currency);
        sb.append(", ").append(marketplace);
        sb.append(", ").append(list);
        sb.append(", ").append(averagePrice);
        sb.append(", ").append(openPrice);
        sb.append(", ").append(highPrice);
        sb.append(", ").append(lowPrice);
        sb.append(", ").append(lastClosePrice);
        sb.append(", ").append(lastPrice);
        sb.append(", ").append(priceChangePercentage);
        sb.append(", ").append(bestBid);
        sb.append(", ").append(bestAsk);
        sb.append(", ").append(trades);
        sb.append(", ").append(volume);
        sb.append(", ").append(turnover);
        sb.append(", ").append(industry);
        sb.append(", ").append(supersector);

        sb.append(")");
        return sb.toString();
    }
}
