/*
 * This file is generated by jOOQ.
 */
package ee.mikkelsaar;


import ee.mikkelsaar.tables.Day;
import ee.mikkelsaar.tables.Share;
import ee.mikkelsaar.tables.records.DayRecord;
import ee.mikkelsaar.tables.records.ShareRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DayRecord> DAY_DATE_KEY = Internal.createUniqueKey(Day.DAY, DSL.name("day_date_key"), new TableField[] { Day.DAY.DATE }, true);
    public static final UniqueKey<DayRecord> DAY_PKEY = Internal.createUniqueKey(Day.DAY, DSL.name("day_pkey"), new TableField[] { Day.DAY.ID }, true);
    public static final UniqueKey<ShareRecord> SHARE_DAY_TICKER_KEY = Internal.createUniqueKey(Share.SHARE, DSL.name("share_day_ticker_key"), new TableField[] { Share.SHARE.DAY, Share.SHARE.TICKER }, true);
    public static final UniqueKey<ShareRecord> SHARE_PKEY = Internal.createUniqueKey(Share.SHARE, DSL.name("share_pkey"), new TableField[] { Share.SHARE.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ShareRecord, DayRecord> SHARE__SHARE_DAY_FKEY = Internal.createForeignKey(Share.SHARE, DSL.name("share_day_fkey"), new TableField[] { Share.SHARE.DAY }, Keys.DAY_PKEY, new TableField[] { Day.DAY.ID }, true);
}
